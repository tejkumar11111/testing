name: Build and Deploy All Apps (Incremental & Full)

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Select build mode (incremental or full)'
        required: true
        default: 'incremental'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for git diff to work

      - name: Determine apps to build (Incremental)
        id: detect_apps
        run: |
          mode="${{ github.event.inputs.mode }}"
          echo "Build mode: $mode"

          if [ "$mode" == "full" ]; then
            apps="agent ui"
            echo "Building and deploying all apps."
          elif [ "$mode" == "incremental" ]; then
            # Get all changed apps (based on last commit)
            changed_apps=$(git diff --name-only HEAD^ HEAD | grep '^app[0-9]\+/' | cut -d/ -f1 | sort -u | uniq)
            if [ -z "$changed_apps" ]; then
              echo "No changes detected in any app."
              apps=""  # Set apps to empty if no changes
            else
              apps="$changed_apps"
            fi
          fi

          echo "Apps to build: $apps"
          echo "apps=$apps" >> $GITHUB_ENV  # Set the apps variable for the next steps

      - name: Build Docker images
        run: |
          if [ -n "$apps" ]; then
            for app in $apps; do
              echo "ðŸ”¨ Building Docker image for $app"
              cd $GITHUB_WORKSPACE/$apps
              docker build -t tejkumar11111/$app:latest .
            done
          else
            echo "ðŸš« No apps to build."
          fi

      - name: Push Docker images (optional)
        if: ${{ env.apps != '' }}
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          for app in ${{ env.apps }}; do
            docker push myregistry/$app:latest
          done

      # - name: Deploy apps (example step)
      #   run: |
      #     if [ -n "$apps" ]; then
      #       echo "ðŸš€ Deploying the apps: $apps"
      #       for app in $apps; do
      #         echo "Deploying $app"
      #         # Replace with actual deployment commands per app, e.g., kubectl apply -f k8s/$app.yaml
      #       done
      #     else
      #       echo "ðŸš« No apps to deploy."
      #     fi
